import React, { useEffect, useState } from 'react';
import axios from 'axios';
import {
    FaMoneyBill,
    FaCreditCard,
    FaPiggyBank,
    FaUniversity,
    FaHome,
    FaComments,
    FaCog,
    FaBell,
    FaUser,
    FaEnvelope,
    FaLock
} from 'react-icons/fa';
import { MdAttachMoney } from 'react-icons/md';

export default function DesktopHomePage() {
    const [rates, setRates] = useState({
        eur: { buy: '‚Äî', sell: '‚Äî' },
        rub: { buy: '‚Äî', sell: '‚Äî' },
        usd: { buy: '‚Äî', sell: '‚Äî' },
    });

    const [activeSection, setActiveSection] = useState('home');
    const [showPersonalForm, setShowPersonalForm] = useState(false);

    const [formData, setFormData] = useState({
        person_age: '',
        person_income: '',
        person_home_ownership: '',
        person_emp_length: ''
    });

    const [hasData, setHasData] = useState(false);
    const [isEditable, setIsEditable] = useState(true);

    useEffect(() => {
        axios.get('/api/currency-rates/')
            .then((response) => {
                setRates({
                    eur: response.data.eur,
                    rub: response.data.rub,
                    usd: response.data.usd,
                });
            })
            .catch((error) => {
                console.error('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –∫—É—Ä—Å–æ–≤ –≤–∞–ª—é—Ç', error);
            });
    }, []);

    useEffect(() => {
        console.log('üîÑ useEffect —Å—Ä–∞–±–æ—Ç–∞–ª: activeSection =', activeSection, 'showPersonalForm =', showPersonalForm);
        if (activeSection === 'settings' && showPersonalForm) {
            const token = localStorage.getItem('token');
            if (token) {
                axios.get('/api/personal-data/', {
                    headers: { Authorization: `Bearer ${token}` }
                })
                .then((response) => {
                    console.log('‚úÖ –ü–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –∑–∞–≥—Ä—É–∂–µ–Ω—ã', response.data);
                    setFormData(response.data);
                    setHasData(true);
                    setIsEditable(false);
                })
                .catch((error) => {
                    if (error.response && error.response.status === 404) {
                        console.log('‚ÑπÔ∏è –î–∞–Ω–Ω—ã–µ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã (404)');
                        setFormData({
                            person_age: '',
                            person_income: '',
                            person_home_ownership: '',
                            person_emp_length: ''
                        });
                        setHasData(false);
                        setIsEditable(true);
                    } else {
                        console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö:', error);
                    }
                });
            }
        }
    }, [activeSection, showPersonalForm]);

    const handleInputChange = (e) => {
        const { name, value } = e.target;
        setFormData((prev) => ({
            ...prev,
            [name]: value
        }));
    };

    const handleSubmit = async () => {
        console.log('üü¢ handleSubmit –≤—ã–∑–≤–∞–Ω (–æ—Ç–ø—Ä–∞–≤–∫–∞ –¥–∞–Ω–Ω—ã—Ö –Ω–∞ —Å–µ—Ä–≤–µ—Ä)');

        try {
            const token = localStorage.getItem('token');
            if (!token) {
                alert('–û—à–∏–±–∫–∞: —Ç–æ–∫–µ–Ω –Ω–µ –Ω–∞–π–¥–µ–Ω. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–æ–π–¥–∏—Ç–µ –∑–∞–Ω–æ–≤–æ.');
                return;
            }

            const response = await axios.post('/api/personal-data/', formData, {
                headers: {
                    Authorization: `Bearer ${token}`
                }
            });

            console.log('‚úÖ –û—Ç–≤–µ—Ç —Å–µ—Ä–≤–µ—Ä–∞:', response.data);
            alert('–î–∞–Ω–Ω—ã–µ —É—Å–ø–µ—à–Ω–æ —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã!');
            setShowPersonalForm(false);
        } catch (error) {
            console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–∏ –¥–∞–Ω–Ω—ã—Ö:', error.response?.data || error.message);
            alert('–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–∏ –¥–∞–Ω–Ω—ã—Ö.');
        }
    };

    return (
        <div className="flex min-h-screen bg-gray-50 relative">
            <aside className="w-64 bg-white shadow-lg p-4">
                <h2 className="text-xl font-bold mb-6">–ü–∞–Ω–µ–ª—å</h2>
                <nav className="space-y-4">
                    <div
                        className={`flex items-center space-x-2 cursor-pointer ${
                            activeSection === 'home' ? 'text-green-600' : 'text-gray-600 hover:text-green-600'
                        }`}
                        onClick={() => {
                            setActiveSection('home');
                            setShowPersonalForm(false);
                        }}
                    >
                        <FaHome className="w-5 h-5" />
                        <span>–ì–ª–∞–≤–Ω–∞—è</span>
                    </div>
                    <div
                        className={`flex items-center space-x-2 cursor-pointer ${
                            activeSection === 'chat' ? 'text-green-600' : 'text-gray-600 hover:text-green-600'
                        }`}
                        onClick={() => {
                            setActiveSection('chat');
                            setShowPersonalForm(false);
                        }}
                    >
                        <FaComments className="w-5 h-5" />
                        <span>–ß–∞—Ç</span>
                    </div>
                    <div
                        className={`flex items-center space-x-2 cursor-pointer ${
                            activeSection === 'settings' ? 'text-green-600' : 'text-gray-600 hover:text-green-600'
                        }`}
                        onClick={() => {
                            setActiveSection('settings');
                            setShowPersonalForm(false);
                        }}
                    >
                        <FaCog className="w-5 h-5" />
                        <span>–ù–∞—Å—Ç—Ä–æ–π–∫–∏</span>
                    </div>
                </nav>
            </aside>

            <main className="flex-1 p-8">
                {activeSection === 'home' && (
                    <>
                        <div className="flex justify-between items-center mb-6">
                            <h1 className="text-2xl font-bold">–ì–ª–∞–≤–Ω–∞—è</h1>
                            <FaBell className="text-green-600 w-6 h-6" />
                        </div>

                        <div className="bg-white rounded-lg shadow p-6 mb-6">
                            <div className="flex items-center space-x-2 mb-4">
                                <FaUniversity className="text-green-600 w-5 h-5" />
                                <h2 className="text-lg font-semibold">–ö—É—Ä—Å—ã –≤–∞–ª—é—Ç</h2>
                            </div>
                            <div className="grid grid-cols-3 gap-4">
                                <div className="p-4 border rounded-lg text-center">
                                    <p className="text-green-600 font-bold text-lg">
                                        ‚Ç¨ {rates.eur.buy} ‚Ç∏
                                    </p>
                                    <p className="text-sm text-gray-500">{rates.eur.sell} ‚Ç∏</p>
                                </div>
                                <div className="p-4 border rounded-lg text-center">
                                    <p className="text-green-600 font-bold text-lg">
                                        ‚ÇΩ {rates.rub.buy} ‚Ç∏
                                    </p>
                                    <p className="text-sm text-gray-500">{rates.rub.sell} ‚Ç∏</p>
                                </div>
                                <div className="p-4 border rounded-lg text-center">
                                    <p className="text-green-600 font-bold text-lg">
                                        $ {rates.usd.buy} ‚Ç∏
                                    </p>
                                    <p className="text-sm text-gray-500">{rates.usd.sell} ‚Ç∏</p>
                                </div>
                            </div>
                        </div>

                        <div className="bg-white rounded-lg shadow p-6">
                            <h2 className="text-lg font-semibold mb-4">–ë—ã—Å—Ç—Ä—ã–µ –¥–µ–π—Å—Ç–≤–∏—è</h2>
                            <div className="grid grid-cols-4 gap-4 text-center">
                                <div className="flex flex-col items-center text-sm">
                                    <FaMoneyBill className="text-green-600 w-6 h-6 mb-1" />
                                    <span>–ü–æ–ø–æ–ª–Ω–µ–Ω–∏–µ</span>
                                </div>
                                <div className="flex flex-col items-center text-sm">
                                    <MdAttachMoney className="text-green-600 w-6 h-6 mb-1" />
                                    <span>–ü–æ–ª—É—á–∏—Ç—å –∫—Ä–µ–¥–∏—Ç</span>
                                </div>
                                <div className="flex flex-col items-center text-sm">
                                    <FaPiggyBank className="text-green-600 w-6 h-6 mb-1" />
                                    <span>–û—Ç–∫—Ä—ã—Ç—å –¥–µ–ø–æ–∑–∏—Ç</span>
                                </div>
                                <div className="flex flex-col items-center text-sm">
                                    <FaCreditCard className="text-green-600 w-6 h-6 mb-1" />
                                    <span>–û—Ç–∫—Ä—ã—Ç—å –∫–∞—Ä—Ç—É</span>
                                </div>
                            </div>
                        </div>
                    </>
                )}

                {activeSection === 'chat' && (
                    <div>
                        <h1 className="text-2xl font-bold mb-4">–ß–∞—Ç</h1>
                        <p>–†–∞–∑–¥–µ–ª —á–∞—Ç–∞ –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ.</p>
                    </div>
                )}

                {activeSection === 'settings' && (
                    <div className="bg-white rounded-lg shadow p-6">
                        <h1 className="text-2xl font-bold mb-4">–ù–∞—Å—Ç—Ä–æ–π–∫–∏</h1>
                        {!showPersonalForm ? (
                            <ul className="divide-y">
                                <li
                                    className="py-3 flex items-center cursor-pointer hover:bg-gray-50"
                                    onClick={() => {
                                        console.log('üîµ –ö–ª–∏–∫ –ø–æ "–õ–∏—á–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ"');
                                        setShowPersonalForm(true);
                                    }}
                                >
                                    <FaUser className="w-5 h-5 text-gray-500 mr-3" />
                                    –õ–∏—á–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
                                </li>
                                <li className="py-3 flex items-center">
                                    <FaEnvelope className="w-5 h-5 text-gray-500 mr-3" />
                                    –ò–∑–º–µ–Ω–∏—Ç—å e-mail
                                </li>
                                <li className="py-3 flex items-center">
                                    <FaLock className="w-5 h-5 text-gray-500 mr-3" />
                                    –ò–∑–º–µ–Ω–∏—Ç—å –ø–∞—Ä–æ–ª—å
                                </li>
                            </ul>
                        ) : (
                            <div className="space-y-4">
                                <div>
                                    <label className="block mb-1 text-sm font-medium">–í–æ–∑—Ä–∞—Å—Ç</label>
                                    <input
                                        type="number"
                                        name="person_age"
                                        value={formData.person_age}
                                        onChange={handleInputChange}
                                        className="w-full border border-gray-300 rounded px-3 py-2"
                                        placeholder="–í–≤–µ–¥–∏—Ç–µ –≤–æ–∑—Ä–∞—Å—Ç"
                                        required
                                        disabled={!isEditable}
                                    />
                                </div>
                                <div>
                                    <label className="block mb-1 text-sm font-medium">–î–æ—Ö–æ–¥</label>
                                    <input
                                        type="number"
                                        name="person_income"
                                        value={formData.person_income}
                                        onChange={handleInputChange}
                                        className="w-full border border-gray-300 rounded px-3 py-2"
                                        placeholder="–í–≤–µ–¥–∏—Ç–µ –¥–æ—Ö–æ–¥"
                                        required
                                        disabled={!isEditable}
                                    />
                                </div>
                                <div>
                                    <label className="block mb-1 text-sm font-medium">–¢–∏–ø –∂–∏–ª—å—è</label>
                                    <select
                                        name="person_home_ownership"
                                        value={formData.person_home_ownership}
                                        onChange={handleInputChange}
                                        className="w-full border border-gray-300 rounded px-3 py-2"
                                        required
                                        disabled={!isEditable}
                                    >
                                        <option value="">–í—ã–±–µ—Ä–∏—Ç–µ</option>
                                        <option value="RENT">RENT ‚Äî –∞—Ä–µ–Ω–¥—É–µ—Ç –∂–∏–ª—å—ë</option>
                                        <option value="OWN">OWN ‚Äî –≤–ª–∞–¥–µ–µ—Ç –∂–∏–ª—å—ë–º –ø–æ–ª–Ω–æ—Å—Ç—å—é</option>
                                        <option value="MORTGAGE">MORTGAGE ‚Äî –∂–∏–ª—å—ë –≤ –∏–ø–æ—Ç–µ–∫–µ</option>
                                        <option value="OTHER">OTHER ‚Äî –¥—Ä—É–≥–æ–µ</option>
                                    </select>
                                </div>
                                <div>
                                    <label className="block mb-1 text-sm font-medium">–°—Ç–∞–∂ —Ä–∞–±–æ—Ç—ã (–ª–µ—Ç)</label>
                                    <input
                                        type="number"
                                        name="person_emp_length"
                                        value={formData.person_emp_length}
                                        onChange={handleInputChange}
                                        className="w-full border border-gray-300 rounded px-3 py-2"
                                        placeholder="–í–≤–µ–¥–∏—Ç–µ —Å—Ç–∞–∂"
                                        required
                                        disabled={!isEditable}
                                    />
                                </div>
                                <div className="flex space-x-2">
                                    {!isEditable ? (
                                        <button
                                            type="button"
                                            className="bg-yellow-500 text-white px-4 py-2 rounded hover:bg-yellow-600"
                                            onClick={() => {
                                                console.log('üü° –ö–Ω–æ–ø–∫–∞ "–ò–∑–º–µ–Ω–∏—Ç—å" –Ω–∞–∂–∞—Ç–∞');
                                                setIsEditable(true);
                                            }}
                                        >
                                            –ò–∑–º–µ–Ω–∏—Ç—å
                                        </button>
                                    ) : (
                                        <>
                                            <button
                                                type="button"
                                                className="bg-green-600 text-white px-4 py-2 rounded hover:bg-green-700"
                                                onClick={() => {
                                                    console.log('üü† –ö–Ω–æ–ø–∫–∞ "–°–æ—Ö—Ä–∞–Ω–∏—Ç—å" –Ω–∞–∂–∞—Ç–∞');
                                                    handleSubmit();
                                                }}
                                            >
                                                –°–æ—Ö—Ä–∞–Ω–∏—Ç—å
                                            </button>
                                            <button
                                                type="button"
                                                className="bg-gray-300 px-4 py-2 rounded hover:bg-gray-400"
                                                onClick={() => {
                                                    console.log('üîô –ö–Ω–æ–ø–∫–∞ "–ù–∞–∑–∞–¥" –Ω–∞–∂–∞—Ç–∞');
                                                    setShowPersonalForm(false);
                                                }}
                                            >
                                                –ù–∞–∑–∞–¥
                                            </button>
                                        </>
                                    )}
                                </div>
                            </div>
                        )}
                    </div>
                )}
            </main>
        </div>
    );
}
